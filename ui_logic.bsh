import java.util.concurrent.Callable;
User user; // dont touch
String userid;

setSyncEnabled(true);
setFileSyncEnabled(true);

/** Local Settings **/

makeLocalID() {
    fetchOne("CREATE TABLE IF NOT EXISTS localSettings (key text primary key, value text);", null);
    fetchOne("drop view if exists identifierAsSpreadsheet;", null);
    fetchOne("create view identifierAsSpreadsheet as select uuid, group_concat(coalesce(measure || ' ' || vocabname || '(' ||freetext||')',  measure || ' (' || freetext ||')',  vocabname || ' (' || freetext ||')',  measure || ' ' || vocabname ,  vocabname || ' (' || freetext || ')',  measure || ' (' || freetext || ')',  measure,  vocabname,  freetext,  measure,  vocabname,  freetext), ' ') as response from (select * from latestNonDeletedArchentIdentifiers order by attributename) group by uuid;", null);
}

makeLocalID();

/** Action Bar **/

addActionBarItem("show_login", new ActionButtonCallback() {
    actionOnLabel() {
        "Change User";
    }
    actionOn() {
        showTabGroup("user");
    }
});

/*** USER ***/

loadUsers() {
    fetchAll("select userid, fname || ' ' || lname from user where userdeleted is null", new FetchCallback() {
        onFetch(result) {
            populateDropDown("user/usertab/users", result);
        }
    });
    fetchOne("select value from localSettings where key = 'User';", new FetchCallback() {
        onFetch(result) {
            if(!isNull(result)) {
                fetchOne("select userid,fname,lname,email from user where userid=" +result.get(0), new FetchCallback() {
                    onFetch(userdata) {
                        user = new User(userdata.get(0),userdata.get(1),userdata.get(2),userdata.get(3));
                        userid=userdata.get(0);
                        setUser(user);
                        username = userdata.get(1) + " " + userdata.get(2);
                        showTabGroup("Artefacts");
                    }
                });
            }
        }

        onError(message) {
                    showToast(message);
        }
    });
}

String username = "";
String device = "";

login() {
    userid = getFieldValue("user/usertab/users");
    fetchOne("select userid,fname,lname,email from user where userid='" + userid + "';", new FetchCallback() {
        onFetch(result) {
            user = new User(result.get(0),result.get(1),result.get(2),result.get(3));
            setUser(user);
            username = result.get(1) + " " + result.get(2);
            fetchOne("REPLACE INTO localSettings(key, value) VALUES('User', '"+ userid +"');", null);
            showTabGroup("Artefacts");
        }
    });
}

loadUsers();
onEvent("user/usertab/login", "click", "login()");

/** Map GPS **/

startInternalGPS();

initMap() {
    setMapZoom("Artefacts/Map/map", 15.0f);
    showBaseMap("Artefacts/Map/map", "base map", "files/data/maps/SydneyStreetmap.tif");

    ps = createPointStyle(10, Color.BLUE, 0.2f, 0.5f);
    ls = createLineStyle(10, Color.GREEN, 0.05f, 0.3f, null);
    pos = createPolygonStyle(10, Color.parseColor("#440000FF"), createLineStyle(10, Color.parseColor("#AA000000"), 0.01f, 0.3f, null));
    ts = createTextStyle(10, Color.BLACK, 40, Typeface.SANS_SERIF);
    isEntity = true;
    queryName = "Artefact_Points";
    querySql = "SELECT uuid, aenttimestamp FROM latestNonDeletedArchEnt join aenttype using (aenttypeid) where aenttypename = 'Artefact' and userid ="+userid;
    showDatabaseLayer("Artefacts/Map/map", "Points Ive found", isEntity, queryName, querySql, ps, ls, pos, ts); 
}

initMap();
setSelectedLayer("Artefacts/Map/map", "Points Ive found");

centreMap() {
    if(!isExternalGPSOn() && !isInternalGPSOn()) {
        showToast("GPS is not enabled.");
    } else {
        centerOnCurrentPosition("Artefacts/Map/map");
    }
}

onEvent("Artefacts/Map/Map_Centre", "click", "centreMap()");

Point pos = null;

currentPoint() {
    positionProj = getGPSPositionProjected();
    if (positionProj == null) {
        showWarning("warning", "GPS has not been started or a position has not been found");
    } else {
        pos = new Point(new MapPos(positionProj.getLongitude(), positionProj.getLatitude()), null, (PointStyle) null, null);
        showToast("Current GPS point updated");
        print("pos: " + pos);        
    }
}

onEvent("Artefacts/Artefact/Current_Point", "click", "currentPoint()");

/** Artefact data entry **/

onEvent("Artefacts/Artefact/Take_Picture", "delayclick", "attachPictureTo(\"Artefacts/Artefact/Photos\");");

fetchAll("select vocabid, vocabname, pictureurl from vocabulary left join attributekey using (attributeid) where attributename = 'Artefact Type';", new FetchCallback () {
    onFetch(pictures) {
        populatePictureGallery("Artefacts/Artefact/Artefact_Type", pictures);
    }
});

/** Artefact saving **/

clearPage() {
    // make new tab and mark previous one as 'deleted', but don't actually remove it.
    artefact_id = null;
    newTab("Artefacts/Artefact");
}

promptClearPage() {
    showAlert("alert", "Do you want to delete all data on the page?", "clearPage", "");
}

onEvent("Artefacts/Artefact/Cancel", "click", "promptClearPage()");

artefact_id = null;

saveArtefact() {
    if (pos == null) {
        currentPoint();
        print("pos is null");
    }
    if (pos != null) {
        print("hello");
        ArrayList geolist = new ArrayList();
        geolist.add(pos);
        saveTabGroup("Artefacts", artefact_id, geolist, null, new SaveCallback() {
            onSave(uuid, newRecord) {
                //artefact_id = uuid;
                showToast("New artefact saved");
                clearPage();
            }    
        });
        print("world");
    } else {
        print("foo");
        showWarning("warning", "Cannot save Artefact: no GPS position found");
    }
}

promptSave() {
    showAlert("alert", "Are you sure you want to create a new Artefact? You can not go back and edit old records", "saveArtefact()", "");
}

onEvent("Artefacts/Artefact/Save", "click", "promptSave()");

